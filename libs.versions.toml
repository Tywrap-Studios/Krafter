[versions]
detekt = "1.23.8"
kotlin = "2.2.20"
ksp = "2.2.20-2.0.3"

autolink = "0.11.0"
bbapi = "2.1.0"
compose = "1.10.0-alpha03"
cozy-modules = "1.1.0-SNAPSHOT"
excelkt = "1.0.2"
exposed = "1.0.0-rc-2"
flexver = "1.1.1"
groovy = "3.0.23"
jansi = "2.4.1"
jsoup = "1.18.1"
kaml = "0.60.0"
kx-ser = "1.9.0"
logback = "1.5.18"
logback-groovy = "1.14.5"
logging = "7.0.13"
kordex-gradle = "1.7.3"
kordex = "2.3.6-SNAPSHOT"
ktor = "3.2.3"
rcon = "1.2.0"
sqlite-jdbc = "3.47.2.0"
semver = "2.0.0"

[libraries]
autolink = { module = "org.nibor.autolink:autolink", version.ref = "autolink" }
bbapi = { module = "com.github.Tywrap-Studios:BlossomBridge", version.ref = "bbapi" }
compose-desktop = { module = "org.jetbrains.compose.desktop:desktop", version.ref = "compose" }
cozy-ama = {  module = "org.quiltmc.community:module-ama", version.ref = "cozy-modules" }
cozy-log-parser = { module = "org.quiltmc.community:module-log-parser", version.ref = "cozy-modules" }
cozy-moderation = { module = "org.quiltmc.community:module-moderation", version.ref = "cozy-modules" }
cozy-user-cleanup = { module = "org.quiltmc.community:module-user-cleanup", version.ref = "cozy-modules" }
detekt = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "detekt" }
detekt-libraries = { module = "io.gitlab.arturbosch.detekt:detekt-rules-libraries", version.ref = "detekt" }
excelkt = { module = "io.github.evanrupert:excelkt", version.ref = "excelkt" }
exposed-core = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposed" }
exposed-dao = { module = "org.jetbrains.exposed:exposed-dao", version.ref = "exposed" }
exposed-java-time = { module = "org.jetbrains.exposed:exposed-java-time", version.ref = "exposed" }
exposed-jdbc = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposed" }
exposed-json = { module = "org.jetbrains.exposed:exposed-json", version.ref = "exposed" }
flexver = { module = "com.unascribed:flexver-java", version.ref = "flexver" }
groovy = { module = "org.codehaus.groovy:groovy", version.ref = "groovy" }
jansi = { module = "org.fusesource.jansi:jansi", version.ref = "jansi" }
jsoup = { module = "org.jsoup:jsoup", version.ref = "jsoup" }
kaml = { module = "com.charleskorn.kaml:kaml", version.ref = "kaml" }
kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
kx-ser = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "kx-ser" }
logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
logback-groovy = { module = "io.github.virtualdogbert:logback-groovy-config", version.ref = "logback-groovy" }
logging = { module = "io.github.oshai:kotlin-logging", version.ref = "logging" }
rcon = { module = "nl.vv32.rcon:rcon", version.ref = "rcon" }
semver = { module = "io.github.z4kn4fein:semver", version.ref = "semver" }
sqlite-jdbc = { module = "org.xerial:sqlite-jdbc", version.ref = "sqlite-jdbc" }

[plugins]
compose = { id = "org.jetbrains.compose", version.ref = "compose" }
kotlin-compose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }

detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }

kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }

kordex-docker = { id = "dev.kordex.gradle.docker", version.ref = "kordex-gradle" }
kordex-plugin = { id = "dev.kordex.gradle.kordex", version.ref = "kordex-gradle" }
ksp-plugin = { id = "com.google.devtools.ksp", version.ref = "ksp" }

[bundles]
cozy-modules = [
#   Use the modules instead
#	"cozy-ama",
#	"cozy-log-parser",
#	Not used at the moment
#	"cozy-moderation",
#	"cozy-user-cleanup",
]
database = [
	"exposed-core",
	"exposed-dao",
	"exposed-java-time",
	"exposed-jdbc",
	"exposed-json",
	"sqlite-jdbc"
]
